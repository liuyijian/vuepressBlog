(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{538:function(t,a,s){"use strict";s.r(a);var e=s(15),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"chap4-大规模可扩展的内容缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chap4-大规模可扩展的内容缓存"}},[t._v("#")]),t._v(" Chap4  大规模可扩展的内容缓存")]),t._v(" "),s("h4",{attrs:{id:"简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),s("ul",[s("li",[t._v("内容缓存减少上游服务器的压力，避免重复的计算过程")]),t._v(" "),s("li",[t._v("可扩展的分布式缓存服务器在用户体验上有战略性意义，让缓存离用户近一点，这就是内容分发网络的模式（CDN）")]),t._v(" "),s("li",[t._v("当上游服务器失效时，仍能通过缓存服务用户请求")])]),t._v(" "),s("h4",{attrs:{id:"缓存区域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存区域"}},[t._v("#")]),t._v(" 缓存区域")]),t._v(" "),s("ul",[s("li",[t._v("我们需要定义缓存的位置和内容：在指定路径下创建一个名为CACHE的60MB大小的共享内存区域，文件目录层级为两级，3小时无访问即将对应缓存释放，目录最大大小为20G，参考"),s("a",{attrs:{href:"https://www.cnblogs.com/crazymagic/p/11029487.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("此处"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("code",[t._v("proxy_cache_path")]),t._v(":仅在HTTP的context下有效")]),t._v(" "),s("li",[s("code",[t._v("proxy_cache")]),t._v("在HTTP，server，location的context下均有效")])]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_cache_path")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("var"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("cache\n\t\t\t\t\t\t\t\t keys_zone"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("CACHE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v("m\n\t\t\t\t\t\t\t\t levels"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\t\t\t\t\t\t\t\t inactive"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("h\n\t\t\t\t\t\t\t\t max_size"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("g"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_cache")]),t._v(" CACHE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"缓存的哈希键"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存的哈希键"}},[t._v("#")]),t._v(" 缓存的哈希键")]),t._v(" "),s("ul",[s("li",[t._v("可以根据不同需求指定缓存的键值，能判断是否命中")])]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nginx会根据host和URI和cookie来生成哈希键，相当于每个用户都有自己的缓存，类似OA系统的员工个人页面")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 默认值是 "$scheme$proxy_host$request_uri"，就是浏览器那串鬼东西')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_cache_key")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$host$request_uri $cookie_user"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"缓存绕道"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存绕道"}},[t._v("#")]),t._v(" 缓存绕道")]),t._v(" "),s("ul",[s("li",[t._v("在某些情况下，请求不应该读取cache而是直接从后端的服务器上获取资源")]),t._v(" "),s("li",[t._v("或者直接设置"),s("code",[t._v("proxy_cache off;")]),t._v("来完全关闭cache")])]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当HTTP请求头中的cache_bypass字段被设置为任意非0值时，会绕过缓存")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_cache_bypass")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_cache_bypass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"缓存表现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存表现"}},[t._v("#")]),t._v(" 缓存表现")]),t._v(" "),s("ul",[s("li",[t._v("客户端缓存可以提高性能")]),t._v(" "),s("li",[t._v("下面的配置指定缓存CSS和JS文件，缓存时间为一年，会在应答头中加上Cache-Control字段，值为public，意思是允许Nginx到客户端中间的任何服务器缓存此内容，若值为private，则仅允许客户端缓存此内容")])]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" \\"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("css"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("js"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("expires")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_header")]),t._v(" Cache"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Control "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"public"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"缓存清除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存清除"}},[t._v("#")]),t._v(" 缓存清除")]),t._v(" "),s("ul",[s("li",[t._v("我们需要能从缓存中清除一个对象，仅在Nginx Plus中提供此命令")]),t._v(" "),s("li",[t._v("若请求方法为PURGE，则指定对象的缓存会被清除，如 "),s("code",[t._v("curl -XPURGE localhost/main.js")]),t._v("，可以通过与geoip相结合或者简单的认证机制结合，确保不是所有人都能随意清除缓存")]),t._v(" "),s("li",[t._v("可以使用通配符来指定清除特定目录下缓存，需要在"),s("code",[t._v("proxy_cache_path")]),t._v("配置中加入"),s("code",[t._v("purger=on")]),t._v("参数")]),t._v(" "),s("li",[t._v("一种常见办法是在静态文件名中加入文件内容的哈希信息，这样，改动过的文件会因为URI的变化而被认为是新的文件，")])]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_method")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$purge_method")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  PURGE "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  default "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    proxy_cache_purge "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$purge_method")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 非0值均会清除缓存")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"缓存分片"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存分片"}},[t._v("#")]),t._v(" 缓存分片")]),t._v(" "),s("ul",[s("li",[t._v("通过切分文件来提高缓存效率")]),t._v(" "),s("li",[t._v("在视频传输方面，使用byte-range requests 传输数据流到浏览器中")]),t._v(" "),s("li",[t._v("若一个request要求的byte-range不在缓存中，Nginx会从origin请求整个文件，若使用了Cache Slice module，则只会从远端请求必要的部分，若Range requests比slice size都大，则会触发次级请求，当所有分段都缓存了，才会返回应答给客户，Cache slice module 适用于较大的不变的文件")])]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_cache_path")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("tmp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mycache keys_zone"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mycache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_cache")]),t._v(" mycache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  slice "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将应答切分为1MB大小的文件分片")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_cache_key")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$host")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$uri")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$is_args")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$args")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$slice_range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v(" Range "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$slice_range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_http_version")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# HTTP 1.0 不支持 byte-range requests")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_cache_valid")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("206")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 206代表部分响应的意思")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("origin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);