(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{447:function(a,t,s){"use strict";s.r(t);var n=s(15),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"工具链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工具链"}},[a._v("#")]),a._v(" 工具链")]),a._v(" "),s("h2",{attrs:{id:"一、远程操控-内网穿透"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、远程操控-内网穿透"}},[a._v("#")]),a._v(" 一、远程操控 && 内网穿透")]),a._v(" "),s("p",[a._v("1、下载"),s("a",{attrs:{href:"https://github.com/fatedier/frp/releases",target:"_blank",rel:"noopener noreferrer"}},[a._v("frp"),s("OutboundLink")],1),a._v("，注意和操作系统对应，macOS，linux，windows；将其中的 frpc 拷贝到内网服务所在的机器上，将 frps 拷贝到具有公网 IP 的机器上，放置在任意目录。")]),a._v(" "),s("p",[a._v("2、编写服务端配置文件"),s("code",[a._v("frps.ini")]),a._v(", 设置了 frp 服务器用户接收客户端连接的端口")]),a._v(" "),s("div",{staticClass:"language-ini extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[a._v("[common]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("bind_port")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" 7000")]),a._v("\n")])])]),s("p",[a._v("3、编写客户端配置文件"),s("code",[a._v("frpc.ini")]),a._v("，其中"),s("code",[a._v("local_ip")]),a._v(" 和 "),s("code",[a._v("local_port")]),a._v(" 配置为本地需要暴露到公网的服务地址和端口。"),s("code",[a._v("remote_port")]),a._v(" 表示在 frp 服务端监听的端口，访问此端口的流量将会被转发到本地服务对应的端口")]),a._v(" "),s("div",{staticClass:"language-ini extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[a._v("[common]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("server_addr")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" xxx.xxx.xxx.xxx")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("server_port")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" 7000")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[a._v("[ssh]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("type")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" tcp")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("local_ip")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" 127.0.0.1")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("local_port")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" 5900")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("remote_port")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" 6000")]),a._v("\n")])])]),s("p",[a._v("4、在公网机器上通过 "),s("code",[a._v("./frps -c ./frps.ini")]),a._v(" 启动服务端，若无权限则"),s("code",[a._v("sudo chmod -R 777 .")])]),a._v(" "),s("p",[a._v("5、在内网机器上通过 "),s("code",[a._v("./frpc -c ./frpc.ini")]),a._v(" 启动客户端，注意，公网服务器安全组要放开6000和7000端口，否则连接不上")]),a._v(" "),s("p",[a._v("6、如果需要在后台长期运行，建议结合其他工具使用，例如 "),s("code",[a._v("systemd")]),a._v(" 和 "),s("code",[a._v("supervisor")])]),a._v(" "),s("p",[a._v("7、内网机器装好vncserver，菜单Options的Security选择 VNC Password，User & Permissions中点击用户user，设置密码")]),a._v(" "),s("p",[a._v("8、任意机器装好vncviewer，连接 xxx.xxx.xxx.xxx:6000，输入7中设置的用户的账号密码即能远程操控内网机器")]),a._v(" "),s("h2",{attrs:{id:"二、python环境配置-linux"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、python环境配置-linux"}},[a._v("#")]),a._v(" 二、Python环境配置（Linux）")]),a._v(" "),s("h3",{attrs:{id:"_1、安装anaconda或miniconda"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、安装anaconda或miniconda"}},[a._v("#")]),a._v(" 1、安装Anaconda或Miniconda")]),a._v(" "),s("h4",{attrs:{id:"下载地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下载地址"}},[a._v("#")]),a._v(" 下载地址")]),a._v(" "),s("ul",[s("li",[a._v("Anaconda(附带常用数据分析库，约500MB)：https://www.anaconda.com/products/individual")]),a._v(" "),s("li",[a._v("Miniconda(精简版，约50MB)：https://docs.conda.io/en/latest/miniconda.html")])]),a._v(" "),s("h4",{attrs:{id:"常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[a._v("#")]),a._v(" 常用命令")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("进入conda环境（看到base则证明成功）："),s("code",[a._v("conda")])])]),a._v(" "),s("li",[s("p",[a._v("展示已安装的包："),s("code",[a._v("conda list")])])]),a._v(" "),s("li",[s("p",[a._v("安装一个新的包："),s("code",[a._v("conda install [package]")])])]),a._v(" "),s("li",[s("p",[a._v("搜索一个包： "),s("code",[a._v("conda search [package]")])])]),a._v(" "),s("li",[s("p",[a._v("添加清华源和conda-forge源")]),a._v(" "),s("ul",[s("li",[s("p",[s("code",[a._v("conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/")])])]),a._v(" "),s("li",[s("p",[s("code",[a._v("conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/")])])]),a._v(" "),s("li",[s("p",[s("code",[a._v("conda config --add channels conda-forge")])])]),a._v(" "),s("li",[s("p",[s("code",[a._v("conda config --set show_channel_urls yes")])])])])]),a._v(" "),s("li",[s("p",[a._v("若报错 "),s("code",[a._v("Solving environment: failed with initial frozen solve. Retrying with flexible solve")])]),a._v(" "),s("ul",[s("li",[s("code",[a._v("conda config --set channel_priority flexible")])])])]),a._v(" "),s("li",[s("p",[a._v("若报错 "),s("code",[a._v("JSON.decode error")])]),a._v(" "),s("ul",[s("li",[s("code",[a._v("conda clean –i")])])])]),a._v(" "),s("li",[s("p",[a._v("虚拟环境")]),a._v(" "),s("ul",[s("li",[a._v("新建环境："),s("code",[a._v("conda create -n webcrawler python=3.8")])]),a._v(" "),s("li",[a._v("进入环境："),s("code",[a._v("conda activate webcrawler")])]),a._v(" "),s("li",[a._v("退出环境："),s("code",[a._v("conda deactivate")])])])])]),a._v(" "),s("h3",{attrs:{id:"_2、深度学习环境搭建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、深度学习环境搭建"}},[a._v("#")]),a._v(" 2、深度学习环境搭建")]),a._v(" "),s("h4",{attrs:{id:"安装nvidia显卡驱动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装nvidia显卡驱动"}},[a._v("#")]),a._v(" 安装Nvidia显卡驱动")]),a._v(" "),s("ul",[s("li",[a._v("从 https://www.nvidia.cn/Download/index.aspx?lang=cn中选择合适的驱动")]),a._v(" "),s("li",[a._v("下载如"),s("code",[a._v("NVIDIA-Linux-x86_64-470.82.01.run")]),a._v(" 文件并执行安装")]),a._v(" "),s("li",[a._v("输入"),s("code",[a._v("nvidia-smi")]),a._v("验证安装")])]),a._v(" "),s("h4",{attrs:{id:"安装cuda驱动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装cuda驱动"}},[a._v("#")]),a._v(" 安装Cuda驱动")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("从https://developer.nvidia.com/cuda-toolkit-archive中选择合适的驱动")])]),a._v(" "),s("li",[s("p",[a._v("下载本地安装器如"),s("code",[a._v("cuda_11.4.4_470.82.01_linux.run")]),a._v("文件并执行安装，不用勾选driver")])]),a._v(" "),s("li",[s("p",[a._v("配置环境变量")]),a._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"export PATH=/usr/local/cuda-11.4/bin:'),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" ~/.bashrc\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"export LD_LIBRARY_PATH=/usr/local/cuda-11.4/lib64:'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$LD_LIBRARY_PATH")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" ~/.bashrc\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("source")]),a._v(" ~/.bashrc\n")])])])])])]),a._v(" "),s("li",[s("p",[a._v("参考链接： https://blog.csdn.net/weixin_42656358/article/details/108772841?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.pc_relevant_default&utm_relevant_index=1")])])]),a._v(" "),s("h4",{attrs:{id:"安装cudnn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装cudnn"}},[a._v("#")]),a._v(" 安装cuDNN")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("从https://developer.nvidia.com/rdp/cudnn-archive中选择合适的版本，输入"),s("code",[a._v("arch")]),a._v("命令查看架构类型")])]),a._v(" "),s("li",[s("p",[a._v("下载本地安装器，因为有权限控制，只能网页下载")])]),a._v(" "),s("li",[s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" -xzvf cudnn-11.4-linux-x64-v8.2.4.15.tgz\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" cuda/include/cudnn.h /usr/local/cuda-11.4/include\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" cuda/lib64/libcudnn* /usr/local/cuda-11.4/lib64\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" a+r /usr/local/cuda-11.4/include/cudnn.h /usr/local/cuda-11.4/lib64/libcudnn*\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查询cuDNN版本（不太行）")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" /usr/local/cuda-11.4/include/cudnn.h "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" CUDNN_MAJOR -A "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" \n")])])])])]),a._v(" "),s("p",[a._v("参考链接：https://zhuanlan.zhihu.com/p/91334380")]),a._v(" "),s("h3",{attrs:{id:"_3、open-mmlab开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、open-mmlab开发"}},[a._v("#")]),a._v(" 3、Open-mmlab开发")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("conda create -n mmlab "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("python")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.9")]),a._v("\nconda activate mmlab\npython -m pip "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu113\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 注意版本问题 https://github.com/open-mmlab/mmcv/blob/master/README_zh-CN.md")]),a._v("\npython -m pip "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" mmcv-full -f https://download.openmmlab.com/mmcv/dist/cu113/torch1.11.0/index.html\npython -m pip "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" mmdet\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);