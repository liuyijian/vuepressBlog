(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{527:function(s,t,a){"use strict";a.r(t);var e=a(15),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"chap15-性能调优"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chap15-性能调优"}},[s._v("#")]),s._v(" Chap15 性能调优")]),s._v(" "),a("h4",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),a("ul",[a("li",[s._v("性能调优往往依赖于环境，需求，物理因素等，应该优先解决瓶颈问题")])]),s._v(" "),a("h4",{attrs:{id:"使用负载驱动器进行自动化测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用负载驱动器进行自动化测试"}},[s._v("#")]),s._v(" 使用负载驱动器进行自动化测试")]),s._v(" "),a("ul",[a("li",[s._v("使用如JMeter，Locust，Gatling等HTTP 负载测试工具，精心构造测试样例，先默认配置直接测来了解基线水平，再逐渐增加用户并发量来模拟典型的生产环境，找到可优化的地方，再测试，通过控制变量法，直到达到预期效果")])]),s._v(" "),a("h4",{attrs:{id:"与客户保持连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与客户保持连接"}},[s._v("#")]),s._v(" 与客户保持连接")]),s._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("http")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("keepalive_requests")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("320")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认为100，单个连接最大允许的请求数")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("keepalive_timeout")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认为75秒，空闲链接被继续维持的时间")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("ul",[a("li",[s._v("默认值一般能满足客户需求，因为现代浏览器允许单域名开多连接，但一般少于10条，所以，会发生请求共用单条连接的情况。一个在部署CDN时取巧的办法是使用多域名指向内容服务器，在源码中，random一个域名，这样，就会多开连接，在前端与后端实时交互场景下起到优化作用。（这段可能没太理解？）")])]),s._v(" "),a("h4",{attrs:{id:"与上游服务器保持连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与上游服务器保持连接"}},[s._v("#")]),s._v(" 与上游服务器保持连接")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/kabi/p/7123354.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("慎用Nginx Upstream keepalive"),a("OutboundLink")],1)])]),s._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("proxy_http_version")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1.1版本允许连接多路复用")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("proxy_set_header")]),s._v(" Connection "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 让代理模块除去默认的close请求头，允许连接保持打开")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("upstream")]),s._v(" backend "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".42")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".2")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".56")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("keepalive")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定了每个Nginx Worker保持打开的“空闲连接”的数量（与连接数量不是一回事，不需要太大）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h4",{attrs:{id:"应答缓冲区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应答缓冲区"}},[s._v("#")]),s._v(" 应答缓冲区")]),s._v(" "),a("ul",[a("li",[s._v("大幅提高代理性能，也可能降低，要根据平均返回的body的大小来决定，彻底地重复地测试")]),s._v(" "),a("li",[s._v("不必要的大缓冲区设置能吃掉Nginx box的内存")])]),s._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 允许响应内容的缓冲")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("proxy_buffering")]),s._v(" on"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认是on")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("proxy_buffer_size")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认值根据平台的不同，为4k或者8k")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("proxy_buffers")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),s._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 缓冲区的个数，默认是8，每个缓冲区的大小，默认是4k或者8k")]),s._v("\n  proxy_busy_buffer_size "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认是buffer size的两倍，忙的定义是客户尚未完全接收发送的应答信息")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h4",{attrs:{id:"访问日志缓冲区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#访问日志缓冲区"}},[s._v("#")]),s._v(" 访问日志缓冲区")]),s._v(" "),a("ul",[a("li",[s._v("对于高访问站点和应用，这是对磁盘使用率和CPU使用率相当有益的调整")])]),s._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("http")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# buffer参数指定了日志数据写入磁盘之前的缓冲区大小")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# flush参数指定了一条日志距离写入磁盘的最大时间（太久不写，挂了就不好的）")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("access_log")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("var"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("log"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("access"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("log main buffer"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),s._v("k flush"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h4",{attrs:{id:"操作系统调优"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作系统调优"}},[s._v("#")]),s._v(" 操作系统调优")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("检查内核设置的Nginx的待服务连接的最大数量，最大字段名为"),a("code",[s._v("net.core.somaxconn")]),s._v("，若此字段被设置为大于512，则在listen 命令中要设置 "),a("code",[s._v("backlog")]),s._v("参数，在大多数情况下，这个东西不用动")])]),s._v(" "),a("li",[a("p",[s._v("提高打开文件描述符的数量往往更实用，Nginx会为每一个连接开一个文件句柄，若使用代理或者负载均衡，则会开两个，为了应付大量连接，调整内核的参数 "),a("code",[s._v("sys.fs.file_max")]),s._v("，查看 "),a("code",[s._v("/etc/security/limits.conf")]),s._v("文件，同时，也要调节 "),a("code",[s._v("worker_connections")]),s._v("和"),a("code",[s._v("worker_rlimit_nofile")]),s._v("参数")])]),s._v(" "),a("li",[a("p",[s._v("启用更多的临时端口；当Nginx作为反向代理或者负载均衡器时，每一个指向上游服务器的连接都会打开一个临时端口来接收应答，但系统可能没有那么多的临时端口可以开，检查内核设置"),a("code",[s._v("net.ipv4.ip_local_port_range")]),s._v(" ，一般地，将其设为 "),a("code",[s._v("1024~65535")]),s._v("，记住，临时端口的下界要大于任一对外监听的端口(???)")])]),s._v(" "),a("li",[a("p",[s._v("操作系统调优不应该是热血上头的行为，要确保有效有意义，要根据日志信息来作出判断")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);